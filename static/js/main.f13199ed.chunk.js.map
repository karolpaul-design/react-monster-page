{"version":3,"sources":["components/card.component.jsx","components/card-list.component.jsx","components/scroll.component.js","components/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","name","email","id","className","alt","src","CardList","props","console","log","monsters","map","Scroll","children","style","border","height","SearchBox","placeholder","handleChange","type","onChange","App","onSearchChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","error","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAEaA,EAAO,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,GAA3B,OAClB,sBAAKC,UAAU,uDAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAA1B,4BAEL,6BAAKF,IACL,4BAAIC,QCLKK,EAAW,SAACC,GAEvB,OADAC,QAAQC,IAAIF,GAEV,qBAAKJ,UAAU,MAAf,SACGI,EAAMG,SAASC,KAAI,SAACZ,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCPdU,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,qBACEC,MAAO,CACL,aAAc,SACdC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGH,KCTMI,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,qBAAKhB,UAAU,UAAf,SACE,uBACEA,UAAU,oCACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,OC2CDG,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAcAC,eAAiB,SAACC,GAClB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhB1B,EAmBdL,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAlBtC,EAAKC,MAAQ,CACXnB,SAAU,GACVgB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEf,SAAUwB,OAC1CC,OAAM,SAACC,GAAD,OAAW5B,QAAQC,IAAI,uB,oBAWlC,WAAU,IAAD,EAC2B4B,KAAKR,MAA/BnB,EADD,EACCA,SAAUgB,EADX,EACWA,YACZY,EAAmB5B,EAAS6B,QAAO,SAACxC,GAAD,OACvCA,EAAQC,KAAKwC,cAAcC,SAASf,EAAYgB,wBAGlD,OACE,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,6BAAd,8BACA,cAAC,EAAD,CACEe,YAAa,kBACbC,aAAckB,KAAKd,iBAErB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUb,SAAU4B,a,GAtCZK,IAAMC,WCMTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f13199ed.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Card = ({ monster: { name, email, id } }) => (\r\n  <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5 \">\r\n    <img\r\n      alt=\"monster\"\r\n      src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n    />\r\n    <h2>{name}</h2>\r\n    <p>{email}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"./card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"mv2\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Scroll = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        \"overflow-y\": \"scroll\",\r\n        border: \"5px solid black\",\r\n        height: \"800px\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <div className=\"pa2 mb3\">\r\n    <input\r\n      className=\"pa3 ba b--green bg-lightest-blue \"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { CardList } from \"./components/card-list.component\";\r\nimport { Scroll } from \"./components/scroll.component\";\r\nimport { SearchBox } from \"./components/search-box.component\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }))\r\n      .catch((error) => console.log(\"Error happened\"));\r\n  }\r\n  \r\n    onSearchChange = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f-subheadline lh-title mv2\">Monsters Rolodex</h1>\r\n        <SearchBox\r\n          placeholder={\"search monsters\"}\r\n          handleChange={this.onSearchChange}\r\n        />\r\n        <Scroll>\r\n          <CardList monsters={filteredMonsters} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}